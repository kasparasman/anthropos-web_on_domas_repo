// pages/_app.tsx
import '../styles/globals.css'
import type { AppProps } from 'next/app'
import Head from 'next/head'
import { Geist, Geist_Mono } from 'next/font/google'
import { SessionProvider } from 'next-auth/react'
import Navbar from '../components/Navbar'
import { AuthProvider } from '../hooks/useFirebaseNextAuth'
import { RegistrationStatusProvider } from '../hooks/useRegistrationStatus'
import MandatoryProfileCompletion from '../components/global/MandatoryProfileCompletion'
import AuthModal from '../components/auth/AuthModal'
import { AuthModalManagerProvider, useAuthModalManager } from '../contexts/AuthModalManagerContext'
import { useEffect } from 'react'
import Toaster from '../components/Toaster'
import GridWithRays from '../components/GridWithRays'
import CookieConsent from 'react-cookie-consent'


// Load Google fonts and assign to CSS variables
const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
})
const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
})

interface AppContentProps extends AppProps { }

function AppContent({ Component, pageProps, router }: AppContentProps) {
  const { state: authModalState, closeAuthModal, setMode } = useAuthModalManager();

  useEffect(() => {
    console.log('[AppContent] MOUNTED/RE-MOUNTED');
    return () => {
      console.log('[AppContent] UNMOUNTING');
    };
  }, []);

  const hideNavbarOn = ['/register2'];

  return (
    <>
      <GridWithRays />

      {!hideNavbarOn.includes(router.pathname) && (
        <Navbar
          onLoginClick={() => {
            setMode('login');
          }}
        />
      )}
      <MandatoryProfileCompletion />
      <AuthModal
        open={authModalState.isModalOpen}
        onClose={closeAuthModal}
      />
      <Component {...pageProps} />
      <Toaster />

      <CookieConsent
        location="bottom"
        buttonText="Accept"
        declineButtonText="Decline"
        enableDeclineButton
        cookieName="site_cookie_consent"
        expires={365}
        style={{ background: '#fada97', textAlign: 'center', padding: '1rem', fontWeight: 500 }}
        buttonStyle={{ background: '#fada97', color: '#000000', fontSize: '16px', marginLeft: '0.5rem', border: '1px solid #000000', borderRadius: '6px', fontWeight: 600 }}
        declineButtonStyle={{ color: '#fff', fontSize: '16px', marginLeft: '0.5rem', border: '1px solid #000000', borderRadius: '6px', fontWeight: 600 }}
        onAccept={() => {
          console.log('ðŸŽ‰ cookies accepted');
          // initialize analytics here
        }}
        onDecline={() => {
          console.log('ðŸš« cookies declined');
          // disable tracking here
        }}
      >
        <span style={{ color: '#000000', fontWeight: 500 }}>We use cookies to improve your experience.</span>{' '}
        <a href="/cookie-policy" style={{ color: '#000', textDecoration: 'underline', fontWeight: 500 }}>
          Learn more
        </a>
      </CookieConsent>
    </>
  );
}

export default function MyApp(props: AppProps) {
  const { Component, pageProps, router } = props;
  const { session, ...restPageProps } = pageProps;

  return (
    <RegistrationStatusProvider>
      <AuthProvider>
        <SessionProvider session={session}>
          <AuthModalManagerProvider>
            <Head>
              <meta charSet="utf-8" />
              <meta name="viewport" content="width=device-width, initial-scale=1" />
              <title>Create Next App</title>
              <meta name="description" content="Generated by create next app" />
            </Head>
            <div className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
              <AppContent Component={Component} pageProps={restPageProps} router={router} />
            </div>
          </AuthModalManagerProvider>
        </SessionProvider>
      </AuthProvider>
    </RegistrationStatusProvider>
  );
}
